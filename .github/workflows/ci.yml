on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 18

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          key: 'rust-cache'

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Install wasm-bindgen
        working-directory: crates/moe
        run: |
          VERSION=$(cargo pkgid --frozen wasm-bindgen | cut -d "@" -f 2)
          cargo +stable install --version $VERSION wasm-bindgen-cli

      - run: pnpm install
      - run: mv .env.dev .env

      - name: svelte-check
        run: pnpm run check

      - name: prettier & eslint
        run: pnpm run lint

      - name: Build
        run: pnpm run build

      - name: Setup supabase CLI
        run: pnpm run supabase:start

      - name: Verify generated types match Postgres schema
        run: |
          npx supabase gen types typescript --local > schema.gen.ts
          if ! git diff --ignore-space-at-eol --exit-code --quiet schema.gen.ts; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

      - run: npx playwright install-deps
      - run: npx playwright install

      - name: setup web-push endpoint
        run: |
          DOCKER_ADDRESS=$(ip address show docker0 | grep -oP 'inet \K(\d{1,3}\.){3}\d{1,3}')
          nohup pnpm run preview -- --host $DOCKER_ADDRESS --port 5173 --strictPort &

      # run playwright tests
      - run: pnpm run test

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 18
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
        with:
          key: 'rust-cache'

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Install wasm-bindgen
        working-directory: crates/moe
        run: |
          VERSION=$(cargo pkgid --frozen wasm-bindgen | cut -d "@" -f 2)
          cargo +stable install --version $VERSION wasm-bindgen-cli

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      # preview deployment
      - name: Pull Vercel Preview Environment Information
        if: github.event_name == 'pull_request'
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        if: github.event_name == 'pull_request'
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          WEB_PUSH_SECRET: ${{ secrets.WEB_PUSH_ENDPOINT_SECRET }}

      - name: Deploy Preview Project Artifacts to Vercel
        if: github.event_name == 'pull_request'
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      # production deployment
      - name: Pull Production Vercel Environment Information
        if: github.event_name == 'push'
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Production Project Artifacts
        if: github.event_name == 'push'
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          WEB_PUSH_SECRET: ${{ secrets.WEB_PUSH_ENDPOINT_SECRET }}

      - name: Deploy Production Project Artifacts to Vercel
        if: github.event_name == 'push'
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
