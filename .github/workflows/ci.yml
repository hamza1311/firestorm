on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          key: 'rust-cache'

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Install wasm-bindgen
        working-directory: crates/moe
        run: |
          VERSION=$(cargo pkgid --frozen wasm-bindgen | cut -d "@" -f 2)
          cargo +stable install --version $VERSION wasm-bindgen-cli

      - run: npm install
      - run: npm run wasm

      # svelte-check
      - run: npm run check
      # pretter & eslint
      - run: npm run lint

      - name: Setup supabase CLI
        run: npm run supabase:start

      - name: Verify generated types match Postgres schema
        run: |
          supabase gen types typescript --local > schema.gen.ts
          if ! git diff --ignore-space-at-eol --exit-code --quiet schema.gen.ts; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff
            exit 1
          fi

      - run: npx playwright install-deps
      - run: npx playwright install

      # run playwright tests
      - run: npm run test

  docker-sveltekit:
    runs-on: ubuntu-latest
    if: false # github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
        with:
          key: 'rust-cache'

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Install wasm-bindgen
        working-directory: crates/moe
        run: |
          VERSION=$(cargo pkgid --frozen wasm-bindgen | cut -d "@" -f 2)
          cargo +stable install --version $VERSION wasm-bindgen-cli

      - name: Build WASM
        run: npm run wasm:build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.actor }}/firestorm:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

